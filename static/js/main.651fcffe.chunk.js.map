{"version":3,"sources":["pages/Splash.js","components/Navbar.js","components/ContactDashboard.js","pages/About.js","components/PortfolioItem.js","components/PortfolioItemThumbnails.js","pages/Portfolio.js","App.js","serviceWorker.js","index.js","splash.jpg"],"names":["fadeInAnimation","keyframes","fadeIn","shadowExpand","Reveal","styled","div","props","hide","Theme","color","splashImage","Billboard","a","Splash","style","styles","splash","className","href","height","display","flexDirection","justifyContent","alignItems","zIndex","NavbarStyled","nav","isNotSmallScreen","NavLink","NavBrand","Navbar","About","Portfolio","useMediaQuery","query","stylesDesktop","stylesMobile","navlink","selected","unselected","to","link","textDecoration","borderRadius","backgroundColor","boxShadow","margin","Dashboard","ContactIconWrapper","ContactIcon","img","ContactDashboard","contactItems","map","item","i","key","target","src","iconPath","isDesktop","isSmallScreen","Proficiency","span","page","pageBody","proficiencies","marginBottom","Fragment","icon","width","technology","length","proficienciesGrid","paddingLeft","whiteSpace","description","bio","paragraphs","padding","marginLeft","paddingTop","textAlign","borderLeft","gridTemplateColumns","gridAutoRows","justifyItems","PortfolioItemWrapper","mobile","image","Banner","bannerRGBA","PortfolioItem","title","source","live","indexer","index","setIndex","changeIndex","event","useEffect","document","addEventListener","removeEventListener","Thumbnail","isCurrentIndex","ThumbnailContainer","PortfolioItemThumbnails","items","currentIndex","onClick","Arrow","useState","handleArrowClick","type","portfolioItems","pageBodyDesktop","pageBodyMobile","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.651fcffe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Theme from '../theme.json';\nimport styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nimport splashImage from '../splash.jpg';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst shadowExpand = keyframes`\n    0% {\n        box-shadow: 15px 10px 100px rgba(255,251,205,0.6);\n        color: lemonchiffon;\n    }\n    100% {\n        box-shadow: 15px 10px 10px 1000px rgba(256,256,256,0.9);\n        color: white;\n    }\n`\n\nconst ClickBox = styled.div`\n    animation: 3s ${fadeInAnimation};\n    letter-spacing: 5px;\n    cursor: pointer;\n    user-select: none;\n    width: 100px;\n    height: 100px;\n    border-radius: 100px;\n    display: ${props => props.hide ? \"none\" : \"flex\"};\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    position: absolute;\n    padding: 22px;\n    color: ${Theme.color};\n    font-size: 2rem;\n    text-decoration: none;\n    transition: 0.2s;\n    z-index: 10;\n    background-color: white;\n    box-shadow: 1px 2px 5px lightgrey;\n    :hover {\n        box-shadow: 0px 1px 2px lightgrey;\n    }\n    :active {\n        box-shadow: inset 1px 1px 4px lightgrey;\n    }\n`\n\nconst Reveal = styled.div`\n    animation: 3s ${fadeInAnimation};\n    color: lemonchiffon;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    transition: 2s;\n    font-size: 1.5rem;\n    background-image: url(${splashImage});\n    background-size: cover;\n    z-index: 0;\n    overflow: hidden;\n`\n\nconst Billboard = styled.a`\n    user-select: none;\n    width: 60vw;\n    height: 60vw;\n    max-height: 80vh;\n    max-width: 80vh;\n    border-radius: 300px;\n    font-size: min(3vw, 4vh);\n    background-color: rgba(0,0,0,0.2);\n    border: 1px lemonchiffon solid;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 15px 10px 100px lemonchiffon;\n    text-decoration: none;\n    transition: 0.2s;\n    color: lemonchiffon;\n    font-weight: bold;\n    z-index: 5;\n    :hover {\n        background-color: rgba(0,0,0,0.3);\n        animation: 4s ${shadowExpand};\n        color: white;\n        box-shadow: 15px 10px 10px 1000px rgba(256,256,256,0.9);\n    }\n    :active {\n        background-color: rgba(0,0,0,0.5);\n        box-shadow: 15px 10px 10px 1000px white;\n        border: 3px white solid;\n    }\n`\n\nexport default function Splash(props) {\n\n    return (\n        <div style={styles.splash}>\n            {\n            <>\n                <Reveal className=\"reveal\">\n                    <Billboard href=\"/about\">\n                        <h1>Noah Sylwester</h1>\n                        <h1>web developer</h1>\n                    </Billboard>\n                </Reveal>\n            </>\n            }\n        </div>\n    )\n}\n\nconst styles = {\n    splash: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        zIndex: '-20'\n    },\n}\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'\n\nconst NavbarStyled = styled.nav`\n    padding: 10px;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.isNotSmallScreen ? \"space-around\" : \"center\"};\n    align-items: center;\n`\n\nconst NavLink = styled.div`\n    text-decoration: none;\n    color: black;\n    transition: 0.2s;\n    padding: 10px;\n    border-radius: 50px;\n    width: 70px;\n    height: 70px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    :hover {\n        background-color: rgba(250,250,250,1);\n        box-shadow: inset 0px 1px 2px lightgrey;\n    }\n    :active {\n        background-color: rgba(240,240,240,1);\n        box-shadow: inset 0px 1px 4px darkgrey;\n    }\n`;\n\nconst NavBrand = styled.a`\n    background-color: rgba(256,256,256,0.4);\n    color: black;\n    display: flex;\n    transition: 0.2s;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.7rem;\n    position: absolute;\n    left: 0;\n    top: 0;\n    text-decoration: none;\n    padding: 15px;\n    margin: 10px;\n    box-shadow: 0px 1px 2px lightgrey; \n    width: 30px;\n    height: 30px;\n    border-radius: 50px;\n    :hover {\n        background-color: rgba(245,245,245,1);\n        box-shadow: inset 0px 1px 1px lightgrey;\n    }\n    :active {\n        background-color: rgba(240,240,240,1);\n        box-shadow: inset 0px 1px 3px darkgrey;\n    }\n`;\n\nexport default function Navbar(props) {\n\n    const { About, Portfolio } = props;\n\n    const isNotSmallScreen = useMediaQuery({\n        query: '(min-width: 500px)'\n    })\n\n    const styles = isNotSmallScreen ? stylesDesktop : stylesMobile;\n\n    return (\n        <NavbarStyled isNotSmallScreen={isNotSmallScreen}>\n            <NavBrand href=\"/\">\n                <div>Noah</div>\n                <div>Sylwester</div>\n            </NavBrand>\n            <Link style={{ ...styles.navlink, ...(About ? styles.selected : styles.unselected)}} to=\"/about\">\n                <NavLink isNotSmallScreen={isNotSmallScreen} style={styles.link}>About</NavLink>\n            </Link>\n            <Link style={{ ...styles.navlink, ...(Portfolio ? styles.selected : styles.unselected)}} to=\"/portfolio\">\n                <NavLink isNotSmallScreen={isNotSmallScreen} style={styles.link}>Portfolio</NavLink>\n            </Link>\n        </NavbarStyled>\n    )\n}\n\nconst stylesDesktop = {\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n    },\n    navlink: {\n        textDecoration: 'none',\n        borderRadius: \"50px\",\n    },\n    selected: {\n        backgroundColor: \"rgba(245,245,245,1)\",\n        boxShadow: \"inset 0px 1px 2px lightgrey\"\n    },\n    unselected: {\n        backgroundColor: \"rgba(256,256,256,0.4)\",\n        boxShadow: \"0px 1px 2px lightgrey\"\n    }\n}\n\nconst stylesMobile = {\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n    },\n    navlink: {\n        textDecoration: 'none',\n        borderRadius: \"50px\",\n        margin: \"0px 5%\",\n    },\n    selected: {\n        backgroundColor: \"rgba(245,245,245,1)\",\n        boxShadow: \"inset 0px 1px 2px lightgrey\"\n    },\n    unselected: {\n        backgroundColor: \"rgba(256,256,256,0.4)\",\n        boxShadow: \"0px 1px 2px lightgrey\"\n    }\n}","import React from 'react';\nimport styled from \"styled-components\";\nimport contactItems from '../contact-items.json';\n\nconst Dashboard = styled.div`\n    padding: 5px 10px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\nconst ContactIconWrapper = styled.a`\n    margin: 10px;\n    height: 50px;\n    width: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: 0.3s;\n    box-shadow: 0 0 3px lightgrey;\n    border-radius: 50px;\n    :hover {\n        box-shadow: inset 0 0 1px lightgrey;\n    }\n    :active {\n        box-shadow: inset 0 0 5px lightgrey;\n    }\n`\n\nconst ContactIcon = styled.img`\n    height: 30px;\n    width: 30px;\n    object-fit: cover;\n    object-position: 0 0;\n`\n\nexport default function ContactDashboard(props) {\n\n    return (\n        <Dashboard>\n            {contactItems.map((item, i) => {\n                return (\n                    <ContactIconWrapper key={i} target=\"_blank\" href={item.link}>\n                        <ContactIcon src={item.iconPath} />\n                    </ContactIconWrapper>\n                    )\n                })}\n        </Dashboard>\n    )\n}\n","import React from 'react';\nimport Navbar from \"../components/Navbar\";\nimport ContactDashboard from '../components/ContactDashboard';\nimport styled from 'styled-components';\nimport proficiencies from '../proficiencies.json';\nimport bio from '../bio.json';\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function About() {\n\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 755px)'\n      })\n    const isSmallScreen = !useMediaQuery({\n        query: '(min-width: 430px)'\n      })\n\n    const styles = isDesktop ? stylesDesktop : stylesMobile;\n\n    const Proficiency = styled.span`\n      color: ${props => props.color};\n    `\n\n    return (\n        <div style={styles.page}>\n            <Navbar About />\n            <div style={styles.pageBody}>\n                <img style={styles.img} src=\"https://noahsylwester.github.io/Portfolio/assets/images/profile_pic%20copy.jpg\"></img>\n                <ContactDashboard />\n                <div style={styles.proficiencies}>\n                    <p style={{ marginBottom: 10 }}>Proficient in</p>\n                    <strong>\n                        {\n                        isDesktop\n                        ?\n                        // desktop view\n                        proficiencies.map((item, i) => {\n                            return (\n                            <React.Fragment key={item.icon + i}>\n                                {item.icon ? <img src={item.icon} style={{height: \"1rem\", width: \"1rem\"}}/> : <></>}\n                                <Proficiency color={item.color}>{item.technology}{i !== proficiencies.length - 1 ? <span>&nbsp;&nbsp;·&nbsp;&nbsp;</span> : \"\"}</Proficiency>\n                            </React.Fragment>\n                            )\n                        })\n                        :\n                        // mobile view\n                        <div style={styles.proficienciesGrid}>\n                            {proficiencies.map((item, i) => {\n                                return (\n                                <div key={item.icon + i} style={{ paddingLeft: isSmallScreen ? \"0\" : \"20%\", whiteSpace: \"nowrap\" }}>\n                                    {item.icon ? <img src={item.icon} style={{height: \"1rem\", width: \"1rem\"}}/> : <></>}\n                                    <Proficiency color={item.color}>{item.technology}</Proficiency>\n                                </div>\n                                )\n                            })}\n                        </div>\n                        }\n\n                    </strong>\n                </div>\n                <p style={styles.description}>\n                    {bio.paragraphs[0]}\n                    <br /><br />\n                    {bio.paragraphs[1]}\n                </p>\n            </div>\n        </div>\n    )\n}\n\n// desktop styles\nconst stylesDesktop = {\n    page: {\n        backgroundColor: 'white',\n        height: \"100%\",\n    },\n    pageBody: {\n        padding: \"100px 100px 100px 120px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    img: {\n        marginLeft: \"1px\",\n        height: \"300px\",\n        width: \"300px\",\n        borderRadius: \"200px\",\n        boxShadow: \"0 1px 7px lightgrey\"\n    },\n    proficiencies: {\n        width: \"70%\",\n        padding: 20,\n        paddingTop: 0,\n        textAlign: \"center\"\n    },\n    description: {\n        width: \"80%\",\n        paddingLeft: 10,\n        borderLeft: \"1px solid lightgrey\"\n    },\n}\n// mobile styles\nconst stylesMobile = {\n    page: {\n        backgroundColor: 'white',\n        height: \"100%\",\n    },\n    pageBody: {\n        padding: \"100px 40px 100px 50px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    img: {\n        marginLeft: \"8px\",\n        height: \"250px\",\n        width: \"250px\",\n        borderRadius: \"200px\",\n    },\n    proficiencies: {\n        width: \"80%\",\n        padding: 20,\n        paddingTop: 0,\n        textAlign: \"center\"\n    },\n    proficienciesGrid: { \n        display: \"grid\",\n        gridTemplateColumns: \"auto auto\",\n        gridAutoRows: \"30px\",\n        justifyItems: \"left\"\n    },\n    description: {\n        width: \"100%\",\n        paddingLeft: 10,\n        borderLeft: \"1px solid lightgrey\"\n    },\n}","import React, { useEffect } from 'react';\nimport styled from \"styled-components\";\n\nconst PortfolioItemWrapper = styled.div`\n    background-color: white;\n    box-shadow: 0px 1px 3px lightgrey;\n    width: ${(props) => props.mobile ? \"100%\" : \"80%\"};\n    min-width: 200px;\n    height: 400px;\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-image: url(${props => props.item.image});\n    background-size: cover;\n    background-position: center;\n`\n\nconst Banner = styled.div`\n    background-color: ${props => props.item.bannerRGBA};\n    border: 1px solid rgba(245,245,245,1);\n    border-right: 0;\n    border-left: 0;\n    width: 100%;\n    padding: 20px 0 20px 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    p {\n        margin: 10px;\n    }\n    a {\n        color: red !important;\n        text-decoration: none;\n        margin: 2px;\n        padding: 5px;\n        width: 100px;\n        text-align: center;\n        :hover {\n            padding: 6px 5px 4px 5px;\n            background-color: rgba(245,245,245,0.6);\n            box-shadow: inset 1px 2px 7px lightgrey;\n        }\n    }\n`\n\nexport default function PortfolioItem(props) {\n\n    const { title, description, source, live, image, bannerRGBA } = props.item;\n    const { index, setIndex, length } = props.indexer || { index: null, setIndex: null, length: null };\n\n    const changeIndex = (event) => {\n        switch (event.key) {\n            case \"ArrowRight\":\n                return setIndex(index + 1 <= length - 1 ? index + 1 : 0);\n            case \"ArrowLeft\":\n                return setIndex(index - 1 >= 0 ? index - 1 : length - 1);\n            default:\n                return;\n        }\n    }\n    \n    useEffect(() => {\n        document.addEventListener('keyup', changeIndex);\n        return () => document.removeEventListener('keyup', changeIndex)\n    }, [index])\n\n    return (\n        <PortfolioItemWrapper mobile={props.mobile} item={{ image, bannerRGBA }}>\n            <Banner item={{ image, bannerRGBA }}>\n                <h1 style={{textAlign: \"center\"}}>{title}</h1>\n                <p style={{ padding: \"0 20px\" }}><strong>{description}</strong></p>\n                <div style={{ display: \"flex\", flexDirection: \"row\"}}>\n                    <a target=\"_blank\" href={source}><strong>Source</strong></a>\n                    {live ? <a target=\"_blank\" href={live}><strong>See it live</strong></a> : <div />}\n                </div>\n            </Banner>\n        </PortfolioItemWrapper>\n    )\n}\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background-image: url(${props => props.item.image});\n    background-size: cover;\n    border: ${props => props.isCurrentIndex ? \"1px solid black\" : \"1px solid white\"};\n    box-shadow: ${props => props.isCurrentIndex ? \"0px 2px 7px black\" : \"0px 2px 7px lightgrey\"};\n    cursor: pointer;\n    transition: 0.2s;\n    :hover {\n        box-shadow: 0px 2px 10px grey;\n    }\n    :active {\n        background-color: rgba(245,245,245,1);\n        box-shadow: inset 0px 2px 7px grey;\n    }\n`\n\nconst ThumbnailContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    width: 60%;\n    margin: 15px auto;\n`\n\nexport default function PortfolioItemThumbnails(props) {\n\n    const { items } = props;\n\n    return (\n        <ThumbnailContainer>\n            {items.map((item, i) => <Thumbnail isCurrentIndex={props.currentIndex === i} key={item.image} item={item} onClick={() => props.changeIndex(i)} />)}\n        </ThumbnailContainer>\n    )\n}\n","import React, { useState } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport portfolioItems from '../portfolio-items.json';\nimport PortfolioItem from '../components/PortfolioItem';\nimport PortfolioItemThumbnails from '../components/PortfolioItemThumbnails';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Arrow = styled.div`\n    cursor: pointer;\n    padding: 5px 9px 5px 9px;\n    border-radius: 30px;\n    background-color: white;\n    box-shadow: 0px 1px 3px lightgrey;\n    font-size: 2rem;\n    :hover {\n        background-color: rgba(250,250,250,1);\n        box-shadow: 0px 0px 1px lightgrey;\n    }\n    :active {\n        background-color: rgba(245,245,245,1);\n        box-shadow: inset 0px 2px 7px lightgrey;\n    }\n    ::selection {\n        color: none;\n        background: none;\n    }\n`\n\n\nexport default function Portfolio(props) {\n\n    const [index, setIndex] = useState(0);\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 755px)'\n      })\n\n    const handleArrowClick = (type) => {\n        switch (type) {\n            case 'back':\n                setIndex(index - 1 >= 0 ? index - 1 : portfolioItems.length - 1);\n                return;\n            case 'forward': \n                setIndex(index + 1 <= portfolioItems.length - 1 ? index + 1 : 0);\n                return;\n            default:\n                setIndex(index);\n                return;\n        }\n    }\n\n    return (\n        <div style={styles.page}>\n            <Navbar Portfolio />\n            <div style={isDesktop ? styles.pageBodyDesktop : styles.pageBodyMobile}>\n                {\n                isDesktop\n                    ?\n                <>\n                    <Arrow onClick={() => handleArrowClick('back')}>←</Arrow>\n                    <PortfolioItem indexer={{ index, setIndex, length: portfolioItems.length }} item={portfolioItems[index]} />\n                    <Arrow onClick={() => handleArrowClick('forward')}>→</Arrow>\n                </>\n                    :\n                <>\n                    {portfolioItems.map((item, i) => <PortfolioItem mobile key={\"mobileitem\" + i} item={item} />)}\n                </>\n                }\n            </div>\n            {\n                isDesktop\n                ?\n                <PortfolioItemThumbnails items={portfolioItems} currentIndex={index} changeIndex={(index) => setIndex(index)} />\n                :\n                <></>\n            }\n        </div>\n    )\n}\n\nconst styles = {\n    page: {\n        backgroundColor: 'white',\n        height: '100%',\n    },\n    pageBodyDesktop: {\n        padding: \"100px 100px 0px 100px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    pageBodyMobile: {\n        padding: \"100px 20px 0px 20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Splash from './pages/Splash';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\n\nconst routes = [\n  { path: '/', name: 'Splash', Component: Splash },\n  { path: '/about', name: 'About', Component: About },\n  { path: '/portfolio', name: 'Portfolio', Component: Portfolio },\n]\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Splash} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/portfolio\" component={Portfolio} />\n      </div>\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/splash.d3add68f.jpg\";"],"sourceRoot":""}